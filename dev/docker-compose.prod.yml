version: '3'
services:
  db:
    image: postgres:16
    restart: 'unless-stopped'
    environment:
      - DATABASE_APP_USER=${DATABASE_USER}
      - DATABASE_APP_USER_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_PASSWORD=${DATABASE_ADMIN_PASSWORD}
      - DATABASE_BACKUP_PASSWORD=${DATABASE_BACKUP_PASSWORD}
    volumes:
      - "./sql:/docker-entrypoint-initdb.d:ro"
      - pgdata:/var/lib/postgresql/data

    # pg tune:
    # DB Version: 16
    # OS Type: linux
    # DB Type: web
    # Total Memory (RAM): 2 GB
    # CPUs num: 2
    # Connections num: 30
    # Data Storage: ssd
    command: >
      -c max_connections=30
      -c shared_buffers=512MB
      -c effective_cache_size=1536MB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=17476kB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_worker_processes=2
      -c max_parallel_workers_per_gather=1
      -c max_parallel_workers=2
      -c max_parallel_maintenance_workers=1

  app:
    image: ghcr.io/pdx-tools/pdx-tools:nightly
    restart: 'unless-stopped'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
      - "traefik.http.routers.app.rule=Host(`${PUBLIC_HOST}`)"
    volumes:
      - ./.env.app:/app/.env.production:ro
    logging:
      driver: journald

  api:
    image: ghcr.io/pdx-tools/api:nightly
    restart: 'unless-stopped'

volumes:
  pgdata:
