diff --git a/node_modules/@cloudflare/next-on-pages/dist/index.js b/node_modules/@cloudflare/next-on-pages/dist/index.js
index a27de32..82228f4 100644
--- a/node_modules/@cloudflare/next-on-pages/dist/index.js
+++ b/node_modules/@cloudflare/next-on-pages/dist/index.js
@@ -7153,20 +7153,29 @@ async function buildNextStaticHeaders(outputDir, opts) {
     (route) => route.src?.startsWith(nextStaticPath)
   );
   const nextStaticHeaders = nextStaticRoute?.headers;
-  if (nextStaticHeaders) {
-    await (0, import_promises5.writeFile)(
-      (0, import_path6.join)(outputDir, "_headers"),
-      `
+  if (!nextStaticHeaders) {
+    return;
+  }
+  const headersPath = (0, import_path6.join)(outputDir, "_headers");
+  const nopContent = `
 # === START AUTOGENERATED @cloudflare/next-on-pages IMMUTABLE HEADERS ===
 ${nextStaticPath}/*
 ${Object.entries(nextStaticHeaders).map(([header, value]) => `  ${header}: ${value}`).join("\n")}
 # === END AUTOGENERATED @cloudflare/next-on-pages IMMUTABLE HEADERS ===
-`,
-      {
-        flag: "a"
-      }
-    );
+`;
+  try {
+    const stats = await (0, import_promises5.stat)(headersPath);
+    if (stats.nlink > 1) {
+      const data2 = await (0, import_promises5.readFile)(headersPath);
+      await (0, import_promises5.unlink)(headersPath);
+      await (0, import_promises5.writeFile)(headersPath, data2);
+    }
+  } catch (e2) {
+    if (e2.code !== "ENOENT") {
+      throw e2;
+    }
   }
+  await (0, import_promises5.writeFile)(headersPath, nopContent, { flag: "a" });
 }
 async function buildRoutes(outputDir, opts) {
   const nextStaticPath = getNextStaticDirPath(opts);
@@ -13229,12 +13238,6 @@ async function checkInvalidFunctions(collectedFunctions, opts) {
   await tryToFixI18nFunctions(collectedFunctions, opts);
   await tryToFixInvalidFuncsWithValidIndexAlternative(collectedFunctions);
   await tryToFixInvalidDynamicISRFuncs(collectedFunctions);
-  if (collectedFunctions.invalidFunctions.size > 0) {
-    await printInvalidFunctionsErrorMessage(
-      collectedFunctions.invalidFunctions
-    );
-    process.exit(1);
-  }
 }
 async function tryToFixAppRouterNotFoundFunction({
   invalidFunctions,
