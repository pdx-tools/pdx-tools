name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
  push:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container:
      image: ghcr.io/pdx-tools/devcontainer
      options: --user root -v /var/run/docker.sock:/var/run/docker.sock
    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'push' ||
      (github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'safe to test'))
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            with_tokens: false
          - os: ubuntu-latest
            with_tokens: true
    name: build / ${{ matrix.os }} / tokens-${{ matrix.with_tokens && 'included' || 'absent' }}
    env:
      CARGO_TERM_VERBOSE: true
      ASSETS_ACCESS_KEY: ${{ secrets.ASSETS_ACCESS_KEY }}
      ASSETS_SECRET_KEY: ${{ secrets.ASSETS_SECRET_KEY }}
      GH_PAT: ${{ secrets.GH_PAT }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CI: true
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache assets
      uses: actions/cache@v4
      with:
        path: |
          assets/game-bundles
          assets/eu4-saves
          src/vic3save/assets
        key: asset-cache

    - uses: actions/checkout@v4
      name: Clone tokens
      if: matrix.with_tokens
      with:
        path: assets/tokens
        repository: pdx-tools/tokens
        token: ${{secrets.GH_PAT}}

    - name: Link tokens
      if: matrix.with_tokens
      run: cd assets/tokens && ln -s tokens/* .

    - name: Add vscode to docker group and fix permissions
      run: |
        usermod -aG docker vscode
        chown -R vscode:vscode $GITHUB_WORKSPACE

    - name: build and test
      run: |
        su - vscode -c "
        cd $GITHUB_WORKSPACE
        eval \"\$(~/.local/bin/mise activate bash --shims)\"
        export GITHUB_TOKEN='$GITHUB_TOKEN'
        export ASSETS_ACCESS_KEY='$ASSETS_ACCESS_KEY'
        export ASSETS_SECRET_KEY='$ASSETS_SECRET_KEY'
        export GH_PAT='$GH_PAT'
        export CI='$CI'
        mise trust --yes && \
        mise install --verbose --jobs 1
        just admin-sync-assets && \
        just package-all && \
        just build-wasm-dev && \
        pnpm install && \
        ${{ matrix.with_tokens && 'just test && ' || '' }} \
        just build-app"
