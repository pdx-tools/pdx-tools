name: CI

# hello world
on:
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
  push:
    branches: [master]

jobs:
  dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - run: docker build .
      working-directory: ./.devcontainer/

  build:
    runs-on: ubuntu-latest
    if: "!github.event.pull_request.head.repo.fork || contains(github.event.pull_request.labels.*.name, 'safe to test')"
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install Just
      run: |
        cd ${{ env.RUNNER_TEMP }}
        curl -O -L "https://github.com/casey/just/releases/download/1.2.0/just-1.2.0-x86_64-unknown-linux-musl.tar.gz"
        mkdir just
        tar -C just -xzf just-1.2.0-x86_64-unknown-linux-musl.tar.gz
        mv just/just /usr/local/bin/.

    - name: Install dependencies
      run: just setup

    - name: Setup environment
      env:
        ASSETS_ACCESS_KEY: ${{ secrets.ASSETS_ACCESS_KEY }}
        ASSETS_SECRET_KEY: ${{ secrets.ASSETS_SECRET_KEY }}
      run: |
        echo "ASSETS_ACCESS_KEY=$ASSETS_ACCESS_KEY" >> .env
        echo "ASSETS_SECRET_KEY=$ASSETS_SECRET_KEY" >> .env

    - name: Cache assets
      uses: actions/cache@v3
      with:
        path: |
          assets/game-bundles
          assets/eu4-saves
        key: asset-cache

    # https://nextjs.org/docs/messages/no-cache#github-actions
    - name: Cache Next.js build
      uses: actions/cache@v3
      with:
        path: src/app/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - uses: Swatinem/rust-cache@v2
    - name: Retrieve assets
      run: just admin-sync-assets
    - name: Unpack assets
      run: just package-all
    - name: Build
      run: just build
    - name: Run tests
      run: just test
