name: CI

on:
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
  push:
    branches: [master]

jobs:
  dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: npm install -g @devcontainers/cli
    - run: devcontainer build --workspace-folder . --image-name pdx-tools-dev-container

  build:
    if: "!github.event.pull_request.head.repo.fork || contains(github.event.pull_request.labels.*.name, 'safe to test')"
    needs: dev
    runs-on: ubuntu-latest
    container:
      image: pdx-tools-dev-container
      env:
        CARGO_TERM_VERBOSE: true
      volumes:
        - assets/game-bundles:assets/game-bundles
        - assets/eu4-saves:assets/eu4-saves
        - src/app/.next/cache:src/app/.next/cache
    steps:
    - uses: actions/checkout@v3
    - name: Cache assets
      uses: actions/cache@v3
      with:
        path: |
          assets/game-bundles
          assets/eu4-saves
        key: asset-cache

    # https://nextjs.org/docs/messages/no-cache#github-actions
    - name: Cache Next.js build
      uses: actions/cache@v3
      with:
        path: src/app/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Setup environment
      env:
        ASSETS_ACCESS_KEY: ${{ secrets.ASSETS_ACCESS_KEY }}
        ASSETS_SECRET_KEY: ${{ secrets.ASSETS_SECRET_KEY }}
      run: |
        echo "ASSETS_ACCESS_KEY=$ASSETS_ACCESS_KEY" >> .env
        echo "ASSETS_SECRET_KEY=$ASSETS_SECRET_KEY" >> .env

    - uses: Swatinem/rust-cache@v2
    - name: Retrieve assets
      run: just admin-sync-assets
    - name: Unpack assets
      run: just package-all
    - name: Run tests
      run: just build-wasm-dev && just build-napi && just test
    - name: Build
      run: just build

    - name: Log in to the Container registry
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to container registry
      if: github.ref == 'refs/heads/master'
      run: docker push ghcr.io/pdx-tools/pdx-tools:nightly
